[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\T832620\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\T832620\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 17.0.9)
[debug]       Load.loadUnit: plugins took 382.0303ms
[debug]       Load.loadUnit: defsScala took 1.3717ms
[debug] [Loading] Scanning directory C:\Users\T832620\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\T832620\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.5235 ms
[debug]           Load.resolveProject(global-plugins) took 53.4076ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\T832620\.sbt\1.0\plugins, plugins: List(<none>))) took 89.2682ms
[debug] [Loading] Done in C:\Users\T832620\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 151.0249ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1649ms
[debug]     Load.loadUnit(file:/C:/Users/T832620/.sbt/1.0/plugins/, ...) took 552.0714ms
[debug]   Load.apply: load took 958.7229ms
[debug]   Load.apply: resolveProjects took 4.2709ms
[debug]   Load.apply: finalTransforms took 169.548ms
[debug]   Load.apply: config.delegates took 41.8822ms
[debug]   Load.apply: Def.make(settings)... took 1266.6082ms
[debug]   Load.apply: structureIndex took 373.7195ms
[debug]   Load.apply: mkStreams took 33.3027ms
[info] loading global plugins from C:\Users\T832620\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8410.8189ms
[debug]           Load.loadUnit: plugins took 37.2212ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\T832620\Desktop\Training\udemy-scala-learning\project
[debug]             Load.loadUnit: mkEval took 14.0077ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\T832620\Desktop\Training\udemy-scala-learning\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1579 ms
[info] loading settings for project udemy-scala-learning-build from idea.sbt ...
[debug]               Load.resolveProject(udemy-scala-learning-build) took 10.5789ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-scala-learning-build, base: C:\Users\T832620\Desktop\Training\udemy-scala-learning\project, plugins: List(<none>))) took 12.4793ms
[debug] [Loading] Done in C:\Users\T832620\Desktop\Training\udemy-scala-learning\project, returning: (udemy-scala-learning-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7331.4708ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.8688ms
[debug]         Load.loadUnit(file:/C:/Users/T832620/Desktop/Training/udemy-scala-learning/project/, ...) took 7383.219ms
[debug]       Load.apply: load took 7384.4296ms
[debug]       Load.apply: resolveProjects took 0.1105ms
[debug]       Load.apply: finalTransforms took 5.7892ms
[debug]       Load.apply: config.delegates took 0.2253ms
[debug]       Load.apply: Def.make(settings)... took 68.0141ms
[debug]       Load.apply: structureIndex took 22.9964ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\T832620\Desktop\Training\udemy-scala-learning\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 11134.6969ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\T832620\Desktop\Training\udemy-scala-learning
[debug]       Load.loadUnit: mkEval took 1.2976ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2537 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 339.3588ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\T832620\Desktop\Training\udemy-scala-learning, plugins: List(<none>))) took 350.4142ms
[debug] [Loading] Done in C:\Users\T832620\Desktop\Training\udemy-scala-learning, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2832.6733ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.8477ms
[debug]   Load.loadUnit(file:/C:/Users/T832620/Desktop/Training/udemy-scala-learning/, ...) took 13983.0747ms
[debug] Load.apply: load took 13984.3602ms
[debug] Load.apply: resolveProjects took 0.0773ms
[debug] Load.apply: finalTransforms took 190.66ms
[debug] Load.apply: config.delegates took 0.2036ms
[debug] Load.apply: Def.make(settings)... took 94.4046ms
[debug] Load.apply: structureIndex took 16.2064ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to udemy-scala-learning (in build file:/C:/Users/T832620/Desktop/Training/udemy-scala-learning/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63317 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63317, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to udemy-scala-learning (in build file:/C:/Users/T832620/Desktop/Training/udemy-scala-learning/)
[debug] > Exec(idea-shell, None, None)
